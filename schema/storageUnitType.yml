openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/AAFC/test/1.0.0
info:
  description: Storage Unit Type schema
  version: "1.0.0"
  title: storage unit type schema
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /v1/storage-unit-type:
    get:
      tags:
        - Storage Unit Type
      summary: Get storage unit type
      operationId: getStorageUnitTypes
      description: By passing in query string, user can get available storage unit types authorised
      parameters:
        - in: query
          name: filter[rsql]
          description: pass an optional search string for looking up the storage unit types
          schema:
            type: string
        - in: query
          name: sort
          description: optional sort order string, such as descending, denoted by "-"
          schema:
            type: string
        - in: query
          name: page[offset]
          description: number of records to skip when paging
          schema:
            type: integer
            format: int32
        - in: query
          name: page[limit]
          description: maximum number of records to return when paging
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: storage unit types satifying the query restrictions
          content:
            application/vnd.api+json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StorageUnitType'                
        '404':
          description: storage unit type not found
    post:
      tags:
        - Storage Unit Type
      summary: Add storage unit type
      operationId: addStorageUnitType
      description: Adds a storage unit type
      responses:
        '201':
          description: storage unit type created
        '422':
          description: Data integrity violation          
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/NewStorageUnitType'
        description: StorageUnitType to add
  /v1/storage-unit-type/{Id}:
    get:
      tags:
        - Storage Unit Type
      summary: Find storage unit type by ID
      description: Returns a single storage unit type
      operationId: getStorageUnitTypeById
      parameters:
        - name: Id
          in: path
          description: ID of storage unit type to return
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: successful operation
          content:
            application/vnd.api+json:
              schema:          
                $ref: '#/components/schemas/StorageUnitType'
        '400':
          description: Not a valid uuid                
        '404':
          description: StorageUnitType not found          
    patch:
      tags:
        - Storage Unit Type
      summary: Update storage unit type
      operationId: updateStorageUnitType
      description: update a storage unit type
      parameters:
        - name: Id
          in: path
          description: storage unit type id to patch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: storage unit type updated
        '400':
          description: invalid input, object invalid
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StorageUnitType'
        description: storage unit type to add
    delete:
      tags:
        - Storage Unit Type
      summary: Delete storage unit type
      operationId: deleteStorageUnitType
      description: delete a storage unit type
      parameters:
        - name: Id
          in: path
          description: storage unit type id to delete
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: storage unit type marked as deleted
        '400':
          description: Not a valid uuid          
        '404':
          description: storage unit type not found       
components:
  schemas:
    StorageUnitType:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
              example: d290f1ee-6c54-4b01-90e6-d701748f0851
              description: Identifier of the object as UUID
          allOf:
            - $ref: '#/components/schemas/CommonStorageUnitType'

    NewStorageUnitType:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/CommonStorageUnitType'

    CommonStorageUnitType:
      type: object
      required:
        - type
        - attributes       
      properties:            
        type:
          enum: [storage-unit-type]      
          description: The type of data being returned.
        attributes:
          type: object
          properties:
            name:
              type: string
              description: The name of the storage unit type
            createdBy:
              type: string      
              readOnly: true
              description: authenticated user who create the storage unit type
            createdOn:              
              type: string
              format: date-time                            
              readOnly: true
              description: date and time when the storage unit type was created in ISO format
              example: 1985-04-12T23:20:50.52Z
            group:
              type: string
              description: The group in which the storage unit type belongs to
            isInseperable:
              type: boolean
              description:  Indicates that the content can't be separated without doing a new preparation
            gridLayoutDefinition:
              type: object
              nullable: true
              description: Optional definition of storage type's grid layout (when possible)
              properties:
                numberOfRows:
                  type: integer
                  minimum: 1
                numberOfColumns:
                  type: integer
                  minimum: 1
                fillDirection:
                  type: string
                  enum: [BY_ROW, BY_COLUMN]
