openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/AAFC/test/1.0.0
info:
  description: Organism schema
  version: "1.0.0"
  title: Organism schema
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /v1/organism:
    get:
      tags:
        - Organism
      summary: Get organism
      operationId: getOrganisms
      description: By passing in query string, user can get available organisms authorised
      parameters:
        - in: query
          name: filter[rsql]
          description: pass an optional search string for looking up the organisms
          schema:
            type: string
        - in: query
          name: sort
          description: optional sort order string, such as descending, denoted by "-"
          schema:
            type: string
        - in: query
          name: page[offset]
          description: number of records to skip when paging
          schema:
            type: integer
            format: int32
        - in: query
          name: page[limit]
          description: maximum number of records to return when paging
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: organisms satifying the query restrictions
          content:
            application/vnd.api+json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Organism'                
        '404':
          description: organism not found
    post:
      tags:
        - Organism
      summary: Add organism
      operationId: addOrganism
      description: Adds a organism
      responses:
        '201':
          description: Organism created
        '422':
          description: Data integrity violation          
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/NewOrganism'
        description: Organism to add
  /v1/organism/{Id}:
    get:
      tags:
        - Organism
      summary: Find organism by ID
      description: Returns a single organism
      operationId: getOrganismById
      parameters:
        - name: Id
          in: path
          description: ID of organism to return
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: successful operation
          content:
            application/vnd.api+json:
              schema:          
                $ref: '#/components/schemas/Organism'
        '400':
          description: Not a valid uuid                
        '404':
          description: Organism not found          
    patch:
      tags:
        - Organism
      summary: Update organism
      operationId: updateOrganism
      description: update a organism
      parameters:
        - name: Id
          in: path
          description: organism id to patch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: organism updated
        '400':
          description: invalid input, object invalid
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organism'
        description: organism to add
    delete:
      tags:
        - Organism
      summary: Delete organism
      operationId: deleteOrganism
      description: delete a organism
      parameters:
        - name: Id
          in: path
          description: organism id to delete
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: organism marked as deleted
        '400':
          description: Not a valid uuid          
        '404':
          description: organism not found       
components:
  schemas:
    Organism:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
              example: d290f1ee-6c54-4b01-90e6-d701748f0851
              description: Identifier of the object as UUID
          allOf:
            - $ref: '#/components/schemas/CommonOrganism'

    NewOrganism:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/CommonOrganism'

    CommonOrganism:
      type: object
      required:
        - type
        - attributes       
      properties:            
        type:
          enum: [organism]      
          description: The type of data being returned.
        attributes:
          type: object
          properties:
            createdBy:
              type: string      
              readOnly: true
              description: authenticated user who create the organism
            createdOn:              
              type: string
              format: date-time                            
              readOnly: true
              description: date and time when the organism was created in ISO format
              example: 1985-04-12T23:20:50.52Z
            group:
              type: string
              nullable: true
              minLength: 0
              maxLength: 50
            lifeStage:
              type: string
              nullable: true
              minLength: 0
              maxLength: 50
            sex:
              type: string
              nullable: true
              minLength: 0
              maxLength: 25
            remarks:
              type: string
              nullable: true
              minLength: 0
              maxLength: 1000
            isTarget:
              type: boolean
              default: false
              nullable: true
            determination:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  verbatimScientificName:
                    type: string
                    nullable: true
                  verbatimDeterminer:
                    type: string
                    nullable: true
                  verbatimDate:
                    type: string
                    nullable: true
                  scientificName:
                    type: string
                    nullable: true
                  transcriberRemarks:
                    type: string
                    nullable: true
                    minLength: 0
                    maxLength: 1000
                  verbatimRemarks:
                    type: string
                    nullable: true
                    minLength: 0
                    maxLength: 1000
                  determinationRemarks:
                    type: string
                    nullable: true
                    minLength: 0
                    maxLength: 1000
                  typeStatus:
                    type: string
                    nullable: true
                  typeStatusEvidence:
                    type: string
                    nullable: true
                  determiner:
                    type: array
                    nullable: true
                    items:
                      type: string
                      format: uuid
                  determinedOn:
                    type: string
                    format: date
                    nullable: true
                  qualifier:
                    type: string
                    nullable: true
                  scientificNameSource:
                    type: string
                    nullable: true
                    enum: [null, CUSTOM, COLPLUS, GNA]
                  scientificNameDetails:
                    type: object
                    nullable: true
                    properties:
                      classificationPath:
                        type: string
                        nullable: true
                        minLength: 0
                        maxLength: 1000
                      classificationRanks:
                        type: string
                        nullable: true
                        minLength: 0
                        maxLength: 1000
                      sourceUrl:
                        type: string
                        format: uri
                        nullable: true
                      labelHtml:
                        type: string
                        nullable: true
                      recordedOn:
                        type: string
                        format: date
                        nullable: true
                      currentName:
                        type: string
                        nullable: true
                        minLength: 0
                        maxLength: 250
                      isSynonym:
                        type: boolean
                        nullable: true
                  isPrimary:
                    type: boolean
                    nullable: true
                    description: whether or not it the primary determination
                  isFiledAs:
                    type: boolean
                    nullable: true
                    description: whether or not it the determination is filed as
                  managedAttributes:
                    type: object
                    nullable: true
                    description: The manage attribute, with key and value pair
                    additionalProperties:
                      type: string